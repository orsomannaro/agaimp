"""Subclass of Paramenters, which is generated by wxFormBuilder."""

import wx
import agaimparam_form

from settings import SECRET_KEY, PARAM_FILE


# Implementing Paramenters
class agaimparamParamenters(agaimparam_form.Paramenters):
    def __init__(self, parent):
        agaimparam_form.Paramenters.__init__(self, parent)
        # Collego l'evento Show
        self.Bind(wx.EVT_SHOW, self.OnLoadData)

    # Handlers for Paramenters events.
    def OnLoadData(self, event):
        """ Carica i dati serializzati su self.data_file.
        OnLoadData e' legato all'evento
        """
        if event.Show:
            import json

            try:
                with open(PARAM_FILE, 'r') as f:
                    json_param = json.load(f)
                    f.close()
                param = json.loads(json_param)
                for field_name, value in param.items():
                    if field_name == 'param_password':
                        value = value[:len(value)-len(SECRET_KEY)]
                    self.__dict__[field_name].Value = value
            except:
                pass

    def OnSalvaClick(self, event):
        """ Serializza e salva i dati su self.data_file.
        """
        import json
        import hashlib

        param = {}
        for field_name, wx_txt_ctrl in self.__dict__.items():
            if field_name.startswith('param_'):
                value = wx_txt_ctrl.Value
                if field_name == 'param_password':
                    value += SECRET_KEY
                param[field_name] = value
        json_param = json.dumps(param)
        with open(PARAM_FILE, 'w') as f:
            json.dump(json_param, f)
            f.close()
        self.Close()

    def OnAnnullaClick(self, event):
        self.Close()
